- name: configure shipping
  hosts: user
  become: yes
  tasks:
    - name: install java and python
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: installed
      loop:
        - maven
        - mysql

    - name: install PyMySQL and cryptography 
      ansible.builtin.pip:
        name: "{{ item }}"
        executable: pip3.9
      loop:
      - cryptography
      - PyMySQL

    - name: create roboshop shipping
      ansible.builtin.user:
        name: roboshop
        shell: /sbin/nologin
        system: true
        home: /app

    - name: download the shipping
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip 
        dest: /tmp/shipping.zip

    - name: extract shipping code
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes
    
    - name: install maven dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: rename jar files
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar 
      args:
        chdir: /app
      
    - name: copy shipping service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service
    
    - name: daemon reload the system service
      ansible.builtin.systemd_service:
        daemon_reload: true
    
    - name: enable and start the system service
      ansible.builtin.service:
        name: shipping
        state: started
        enabled: yes

    - name: import data
      community.mysql.mysql_db:
        name: all
        login_user: root
        login_password: RoboShop@1
        login_host: mysql.pract.site
        state: import
        target: "{{ item }}"
      loop:
      - /app/db/schema.sql
      - /app/db/app-user.sql
      - /app/db/master-data.sql

    - name: restart shipping
      ansible.builtin.service:
        state: restarted
        name: shipping
    


